using System;
using System.Collections.Generic;
using System.Diagnostics.Eventing.Reader;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace SnowmanGame
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Random rnd = new Random();

            #region KAR TOPU ATMA

            // Yazı kısmını ayıran çizgi
            for (int lineloop = 0; lineloop < 40; lineloop++)
            {
                Console.ResetColor();
                Console.SetCursorPosition(120, lineloop);
                Console.Write("|");
            }

            double speed, angle, windspeed, radyan, ballx, bally;

            int txty = 0;

            speed = 0;
            angle = 0;
            radyan = angle * Math.PI / 180;

            int t1x = -1, t1y = -1;
            int t2x = -1, t2y = -1;
            int t3x = -1, t3y = -1;
            int t4x = -1, t4y = -1;

            int turn = 2;

            int round = 0;

            ballx = 0; bally = 0;

            #region randomlar

            int snwblue1x, snwblue1y, snwblue2x, snwblue2y, snwred1x, snwred1y, snwred2x, snwred2y;
            int wall2length, wall2x, wall2y, wall2end, wall1length, wall1x, wall1y, wall1end, shtbluex, shtbluey, shtredx, shtredy;

            shtbluex = rnd.Next(0, 40);
            shtbluey = rnd.Next(0, 40);

            shtredx = rnd.Next(80, 120);
            shtredy = rnd.Next(0, 40);

            snwblue1x = rnd.Next(0, 40);
            snwblue1y = rnd.Next(0, 40);

            snwblue2x = rnd.Next(0, 40);
            snwblue2y = rnd.Next(0, 40);

            snwred1x = rnd.Next(80, 120);
            snwred1y = rnd.Next(0, 40);

            snwred2x = rnd.Next(80, 120);
            snwred2y = rnd.Next(0, 40);

            wall1length = rnd.Next(3, 7);
            wall1x = rnd.Next(40, 80);
            wall1y = rnd.Next(0, (41 - wall1length));
            wall1end = wall1y + wall1length - 1;

            wall2length = rnd.Next(3, 7);
            wall2x = rnd.Next(40, 80);
            wall2y = rnd.Next(0, (41 - wall2length));
            wall2end = wall2y + wall2length - 1;

            #region MAP OLUŞTURMA

            #region Atıcılar

            Console.ForegroundColor = ConsoleColor.Blue;
            Console.SetCursorPosition(shtbluex, shtbluey);
            Console.Write("X");

            Console.ForegroundColor = ConsoleColor.DarkRed;
            Console.SetCursorPosition(shtredx, shtredy);
            Console.Write("X");

            #endregion

            #region Kardan Adamlar

            // 1. Mavi Kardan Adamı
            while (true)
            {
                if (snwblue1x == shtbluex && snwblue1y == shtbluey)
                {
                    snwblue1x = rnd.Next(0, 40);
                    snwblue1y = rnd.Next(0, 40);
                    continue;
                }
                else
                {
                    Console.ForegroundColor = ConsoleColor.DarkCyan;
                    Console.SetCursorPosition(snwblue1x, snwblue1y);
                    Console.Write("&");

                    break;
                }
            }

            // 2. Mavi Kardan Adamı
            while (true)
            {
                if (snwblue2x == shtbluex && snwblue2y == shtbluey || snwblue2x == snwblue1x && snwblue2y == snwblue1y)
                {
                    snwblue2x = rnd.Next(0, 40);
                    snwblue2y = rnd.Next(0, 40);
                    continue;
                }
                else
                {
                    Console.SetCursorPosition(snwblue2x, snwblue2y);
                    Console.Write("&");

                    break;
                }
            }

            // 1. Kırmızı Kardan Adamı
            while (true)
            {
                if (snwred1x == shtredx && snwred1y == shtredy)
                {
                    snwred1x = rnd.Next(80, 120);
                    snwred1y = rnd.Next(0, 40);
                    continue;
                }
                else
                {
                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.SetCursorPosition(snwred1x, snwred1y);
                    Console.Write("&");

                    break;
                }
            }

            // 2. Kırmızı Kardan Adamı
            while (true)
            {
                if (snwred2x == shtredx && snwred2y == shtredy || snwred2x == snwred1x && snwred2y == snwred1y)
                {
                    snwred2x = rnd.Next(80, 120);
                    snwred2y = rnd.Next(0, 40);
                    continue;
                }
                else
                {
                    Console.SetCursorPosition(snwred2x, snwred2y); //kırmızı takım 2. kardan adamı
                    Console.Write("&");

                    break;
                }
            }

            #endregion

            #region Duvar 1

            // 1. Duvar oluşturma döngüsü
            for (int wall1loop = 0; wall1loop < wall1length; wall1loop++)
            {
                Console.ForegroundColor = ConsoleColor.DarkGreen;
                Console.SetCursorPosition(wall1x, wall1y + wall1loop);
                Console.Write("#");
            }

            #endregion

            #region Duvar 2

            // 2. Duvarın 1. Duvarla Çakışma Kontrolü
            while (true)
            {
                if (wall2x == wall1x && wall2y <= wall1end && wall2end >= wall1y)
                {
                    wall2length = rnd.Next(3, 7);
                    wall2x = rnd.Next(40, 80);
                    wall2y = rnd.Next(0, (41 - wall2length));
                    wall2end = wall2y + wall2length - 1;
                    continue;
                }
                else
                {
                    break;
                }
            }

            // 2. Duvar oluşturma döngüsü
            for (int wall2loop = 0; wall2loop < wall2length; wall2loop++)
            {
                Console.SetCursorPosition(wall2x, wall2y + wall2loop);
                Console.Write("#");
            }

            #endregion

            #endregion

            double dt = 0.1;
            double g = 1;
            double vx = 0;
            double vy = 0;

            #endregion

            while (true)
            {
                round++;

                if (round != 1 && round % 3 == 1)
                {
                    shtbluex = rnd.Next(0, 40);
                    shtbluey = rnd.Next(0, 40);

                    shtredx = rnd.Next(80, 120);
                    shtredy = rnd.Next(0, 40);

                    snwblue1x = rnd.Next(0, 40);
                    snwblue1y = rnd.Next(0, 40);

                    snwblue2x = rnd.Next(0, 40);
                    snwblue2y = rnd.Next(0, 40);

                    snwred1x = rnd.Next(80, 120);
                    snwred1y = rnd.Next(0, 40);

                    snwred2x = rnd.Next(80, 120);
                    snwred2y = rnd.Next(0, 40);

                    wall1length = rnd.Next(3, 7);
                    wall1x = rnd.Next(40, 80);
                    wall1y = rnd.Next(0, (41 - wall1length));
                    wall1end = wall1y + wall1length - 1;

                    wall2length = rnd.Next(3, 7);
                    wall2x = rnd.Next(40, 80);
                    wall2y = rnd.Next(0, (41 - wall2length));
                    wall2end = wall2y + wall2length - 1;

                    Console.WriteLine("yeni map için bişeye baS");
                    Console.ReadKey();

                    for (int cx = 0; cx < 120; cx++)
                    {
                        for (int cy = 0; cy < 40; cy++)
                        {
                            Console.SetCursorPosition(cx, cy);
                            Console.Write(" ");
                        }
                    }

                    #region MAP OLUŞTURMA

                    #region Atıcılar

                    Console.ForegroundColor = ConsoleColor.Blue;
                    Console.SetCursorPosition(shtbluex, shtbluey);
                    Console.Write("X");

                    Console.ForegroundColor = ConsoleColor.DarkRed;
                    Console.SetCursorPosition(shtredx, shtredy);
                    Console.Write("X");

                    #endregion

                    #region Kardan Adamlar

                    // 1. Mavi Kardan Adamı
                    while (true)
                    {
                        if (snwblue1x == shtbluex && snwblue1y == shtbluey)
                        {
                            snwblue1x = rnd.Next(0, 40);
                            snwblue1y = rnd.Next(0, 40);
                            continue;
                        }
                        else
                        {
                            Console.ForegroundColor = ConsoleColor.DarkCyan;
                            Console.SetCursorPosition(snwblue1x, snwblue1y);
                            Console.Write("&");

                            break;
                        }
                    }

                    // 2. Mavi Kardan Adamı
                    while (true)
                    {
                        if (snwblue2x == shtbluex && snwblue2y == shtbluey || snwblue2x == snwblue1x && snwblue2y == snwblue1y)
                        {
                            snwblue2x = rnd.Next(0, 40);
                            snwblue2y = rnd.Next(0, 40);
                            continue;
                        }
                        else
                        {
                            Console.SetCursorPosition(snwblue2x, snwblue2y);
                            Console.Write("&");

                            break;
                        }
                    }

                    // 1. Kırmızı Kardan Adamı
                    while (true)
                    {
                        if (snwred1x == shtredx && snwred1y == shtredy)
                        {
                            snwred1x = rnd.Next(80, 120);
                            snwred1y = rnd.Next(0, 40);
                            continue;
                        }
                        else
                        {
                            Console.ForegroundColor = ConsoleColor.Red;
                            Console.SetCursorPosition(snwred1x, snwred1y);
                            Console.Write("&");

                            break;
                        }
                    }

                    // 2. Kırmızı Kardan Adamı
                    while (true)
                    {
                        if (snwred2x == shtredx && snwred2y == shtredy || snwred2x == snwred1x && snwred2y == snwred1y)
                        {
                            snwred2x = rnd.Next(80, 120);
                            snwred2y = rnd.Next(0, 40);
                            continue;
                        }
                        else
                        {
                            Console.SetCursorPosition(snwred2x, snwred2y); //kırmızı takım 2. kardan adamı
                            Console.Write("&");

                            break;
                        }
                    }

                    #endregion

                    #region Duvar 1

                    // 1. Duvar oluşturma döngüsü
                    for (int wall1loop = 0; wall1loop < wall1length; wall1loop++)
                    {
                        Console.ForegroundColor = ConsoleColor.DarkGreen;
                        Console.SetCursorPosition(wall1x, wall1y + wall1loop);
                        Console.Write("#");
                    }

                    #endregion

                    #region Duvar 2

                    // 2. Duvarın 1. Duvarla Çakışma Kontrolü
                    while (true)
                    {
                        if (wall2x == wall1x && wall2y <= wall1end && wall2end >= wall1y)
                        {
                            wall2length = rnd.Next(3, 7);
                            wall2x = rnd.Next(40, 80);
                            wall2y = rnd.Next(0, (41 - wall2length));
                            wall2end = wall2y + wall2length - 1;
                            continue;
                        }
                        else
                        {
                            break;
                        }
                    }

                    // 2. Duvar oluşturma döngüsü
                    for (int wall2loop = 0; wall2loop < wall2length; wall2loop++)
                    {
                        Console.SetCursorPosition(wall2x, wall2y + wall2loop);
                        Console.Write("#");
                    }

                    #endregion

                    #endregion

                }

                Console.ForegroundColor = ConsoleColor.DarkYellow;
                windspeed = rnd.Next(0, 401);
                windspeed = (windspeed - 200) / 100;

                Console.SetCursorPosition(122, txty);
                Console.Write("Rüzgar Hızı: ");
                Console.ForegroundColor = ConsoleColor.Magenta;
                Console.Write(windspeed);
                txty++;

                #region Açı değerleri alma

                Console.ForegroundColor = ConsoleColor.DarkYellow;
                Console.SetCursorPosition(122, txty);
                Console.Write("Round ");
                Console.Write(round);
                Console.Write(": ");
                if (turn == 2)
                {
                    Console.ForegroundColor = ConsoleColor.Blue;
                    Console.Write("Mavi ");
                }
                else
                {
                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.Write("Kırmızı ");
                }
                Console.ForegroundColor = ConsoleColor.DarkYellow;
                Console.Write("Takım");
                txty++;

                Console.ForegroundColor = ConsoleColor.DarkYellow;
                Console.SetCursorPosition(122, txty);
                Console.Write("Açı değerini gir (5-85): ");
                txty++;

                //açı için 5 ile 85 arası değer kontrolü
                while (true)
                {
                    Console.ForegroundColor = ConsoleColor.Yellow;
                    angle = Convert.ToDouble(Console.ReadLine());
                    radyan = angle * Math.PI / 180;

                    if (angle >= 5 && angle <= 85)
                    {
                        break;
                    }
                    else
                    {
                        Console.ForegroundColor = ConsoleColor.Red;
                        Console.SetCursorPosition(122, txty);
                        Console.Write("Hata! ");
                        Console.ForegroundColor = ConsoleColor.DarkYellow;
                        Console.Write("Lütfen 5 ile 85 arasında bir değer girin: ");
                        txty++;
                        continue;
                    }
                }

                Console.ForegroundColor = ConsoleColor.DarkYellow;
                Console.SetCursorPosition(122, txty);
                Console.Write("Hız değerini gir (5-25): ");
                txty++;

                //hız için 5 ile 25 arası değer kontrolü
                while (true)
                {
                    Console.ForegroundColor = ConsoleColor.Yellow;
                    speed = Convert.ToDouble(Console.ReadLine());

                    if (speed >= 5 && speed <= 25)
                    {
                        break;
                    }
                    else
                    {
                        Console.ForegroundColor = ConsoleColor.Red;
                        Console.SetCursorPosition(122, txty);
                        Console.Write("Hata! ");
                        Console.ForegroundColor = ConsoleColor.DarkYellow;
                        Console.Write("Lütfen 5 ile 25 arasında bir değer girin: ");
                        txty++;
                        continue;
                    }
                }

                #endregion

                for (int cx = 0; cx < 120; cx++)
                {
                    for (int cy = 0; cy < 40; cy++)
                    {
                        Console.SetCursorPosition(cx, cy);
                        Console.Write(" ");
                    }
                }

                #region MAP OLUŞTURMA

                #region Atıcılar

                Console.ForegroundColor = ConsoleColor.Blue;
                Console.SetCursorPosition(shtbluex, shtbluey);
                Console.Write("X");

                Console.ForegroundColor = ConsoleColor.DarkRed;
                Console.SetCursorPosition(shtredx, shtredy);
                Console.Write("X");

                #endregion

                #region Kardan Adamlar

                // 1. Mavi Kardan Adamı
                while (true)
                {
                    if (snwblue1x == shtbluex && snwblue1y == shtbluey)
                    {
                        snwblue1x = rnd.Next(0, 40);
                        snwblue1y = rnd.Next(0, 40);
                        continue;
                    }
                    else
                    {
                        Console.ForegroundColor = ConsoleColor.DarkCyan;
                        Console.SetCursorPosition(snwblue1x, snwblue1y);
                        Console.Write("&");

                        break;
                    }
                }

                // 2. Mavi Kardan Adamı
                while (true)
                {
                    if (snwblue2x == shtbluex && snwblue2y == shtbluey || snwblue2x == snwblue1x && snwblue2y == snwblue1y)
                    {
                        snwblue2x = rnd.Next(0, 40);
                        snwblue2y = rnd.Next(0, 40);
                        continue;
                    }
                    else
                    {
                        Console.SetCursorPosition(snwblue2x, snwblue2y);
                        Console.Write("&");

                        break;
                    }
                }

                // 1. Kırmızı Kardan Adamı
                while (true)
                {
                    if (snwred1x == shtredx && snwred1y == shtredy)
                    {
                        snwred1x = rnd.Next(80, 120);
                        snwred1y = rnd.Next(0, 40);
                        continue;
                    }
                    else
                    {
                        Console.ForegroundColor = ConsoleColor.Red;
                        Console.SetCursorPosition(snwred1x, snwred1y);
                        Console.Write("&");

                        break;
                    }
                }

                // 2. Kırmızı Kardan Adamı
                while (true)
                {
                    if (snwred2x == shtredx && snwred2y == shtredy || snwred2x == snwred1x && snwred2y == snwred1y)
                    {
                        snwred2x = rnd.Next(80, 120);
                        snwred2y = rnd.Next(0, 40);
                        continue;
                    }
                    else
                    {
                        Console.SetCursorPosition(snwred2x, snwred2y); //kırmızı takım 2. kardan adamı
                        Console.Write("&");

                        break;
                    }
                }

                #endregion

                #region Duvar 1

                // 1. Duvar oluşturma döngüsü
                for (int wall1loop = 0; wall1loop < wall1length; wall1loop++)
                {
                    Console.ForegroundColor = ConsoleColor.DarkGreen;
                    Console.SetCursorPosition(wall1x, wall1y + wall1loop);
                    Console.Write("#");
                }

                #endregion

                #region Duvar 2

                // 2. Duvarın 1. Duvarla Çakışma Kontrolü
                while (true)
                {
                    if (wall2x == wall1x && wall2y <= wall1end && wall2end >= wall1y)
                    {
                        wall2length = rnd.Next(3, 7);
                        wall2x = rnd.Next(40, 80);
                        wall2y = rnd.Next(0, (41 - wall2length));
                        wall2end = wall2y + wall2length - 1;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }

                // 2. Duvar oluşturma döngüsü
                for (int wall2loop = 0; wall2loop < wall2length; wall2loop++)
                {
                    Console.SetCursorPosition(wall2x, wall2y + wall2loop);
                    Console.Write("#");
                }

                #endregion

                #endregion

                if (turn == 1)
                {
                    turn = 2;
                    ballx = shtredx - 1;
                    bally = shtredy - 1;
                    vx = -speed * Math.Cos(radyan);
                    vy = -speed * Math.Sin(radyan);
                }
                else if (turn == 2)
                {
                    turn = 1;
                    ballx = shtbluex + 1;
                    bally = shtbluey - 1;
                    vx = speed * Math.Cos(radyan);
                    vy = -speed * Math.Sin(radyan);
                }

                while (true)
                {

                    Thread.Sleep(0);

                    Console.ForegroundColor = ConsoleColor.DarkGreen;

                    // sınıra çarptın?
                    if (ballx > 119 || ballx < 0)
                    {
                        Console.SetCursorPosition(122, txty);
                        Console.Write("Sınıra Çarptın!");
                        txty++;
                        break;
                    }

                    // yere düştün?
                    if (bally > 39)
                    {
                        Console.SetCursorPosition(122, txty);
                        Console.Write("Yere Düştün!");
                        txty++;
                        break;
                    }

                    // mavi atıcıyı vurdun?
                    if ((int)ballx == shtbluex && (int)bally == shtbluey)
                    {
                        Console.SetCursorPosition(122, txty);
                        Console.Write("Mavi Atıcıyı Vurdun!");
                        txty++;
                        break;
                    }

                    // mavi kardan adamını vurdun?
                    if ((int)ballx == snwblue1x && (int)bally == snwblue1y || (int)ballx == snwblue2x && (int)bally == snwblue2y)
                    {
                        Console.SetCursorPosition(122, txty);
                        Console.Write("Mavi Kardan Adamını Vurdun!");
                        txty++;
                        break;
                    }

                    // kırmızı atıcıyı vurdun?
                    if ((int)ballx == shtredx && (int)bally == shtredy)
                    {
                        Console.SetCursorPosition(122, txty);
                        Console.Write("Kırmızı Atıcıyı Vurdun!");
                        txty++;
                        break;
                    }

                    // kırmızı kardan adamını vurdun?
                    if ((int)ballx == snwred1x && (int)bally == snwred1y || (int)ballx == snwred2x && (int)bally == snwred2y)
                    {
                        Console.SetCursorPosition(122, txty);
                        Console.Write("Kırmızı Kardan Adamını Vurdun!");
                        txty++;
                        break;
                    }

                    // 1. duvara çarptın?
                    if ((int)ballx == wall1x && (int)bally >= wall1y && (int)bally <= wall1end)
                    {
                        Console.SetCursorPosition(122, txty);
                        Console.Write("Duvara Çarptın!");
                        txty++;
                        break;
                    }

                    // 2. duvara çarptın?
                    if ((int)ballx == wall2x && (int)bally >= wall2y && (int)bally <= wall2end)
                    {
                        Console.SetCursorPosition(122, txty);
                        Console.Write("Duvara Çarptın!");
                        txty++;
                        break;
                    }

                    //1. Mor iz
                    if (t1y >= 0)
                    {
                        Console.ForegroundColor = ConsoleColor.DarkMagenta;
                        Console.SetCursorPosition((int)t1x, (int)t1y);
                        Console.Write("O");
                    }

                    //2. Mor iz
                    if (t2y >= 0)
                    {
                        Console.ForegroundColor = ConsoleColor.DarkMagenta;
                        Console.SetCursorPosition((int)t2x, (int)t2y);
                        Console.Write("O");
                    }

                    //3. Mor iz
                    if (t3y >= 0)
                    {
                        Console.ForegroundColor = ConsoleColor.DarkMagenta;
                        Console.SetCursorPosition((int)t3x, (int)t3y);
                        Console.Write("O");
                    }

                    //Gri iz
                    if (t4y >= 0)
                    {
                        Console.ForegroundColor = ConsoleColor.DarkGray;
                        Console.SetCursorPosition((int)t4x, (int)t4y);
                        Console.Write("o");
                    }

                    //Pembe iz
                    if (bally >= 0)
                    {
                        Console.ForegroundColor = ConsoleColor.Magenta;
                        Console.SetCursorPosition((int)ballx, (int)bally);
                        Console.Write("@");
                    }

                    t4x = t3x;
                    t3x = t2x;
                    t2x = t1x;
                    t1x = (int)ballx;

                    t4y = t3y;
                    t3y = t2y;
                    t2y = t1y;
                    t1y = (int)bally;

                    vx = vx + windspeed * dt;
                    vy = vy + g * dt;
                    ballx = ballx + vx * dt;
                    bally = bally + vy * dt;
                }
            }

            #endregion

            Console.ReadLine();
        }
    }
}
